name: Manage environments vars
permissions: write-all
on:
  workflow_call:

jobs:
  check-issue-value:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - name: Assign issue
        run: |
          gh issue edit ${{ github.event.issue.number }} --add-assignee ${{ github.event.issue.user.login }}

          gh issue comment ${{ github.event.issue.number }} -b "
            ‚åõ To follow the runner click here:
            - https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Approve action
        run: |
          issueNumber=${{ github.event.issue.number }}
          owner=$(echo "$GITHUB_REPOSITORY" | cut -d '/' -f1)
          repository=$(echo "$GITHUB_REPOSITORY" | cut -d '/' -f2)

          currentVersion="0.42.0"
          rollbackVersion="0.40.0"

          bodyComment="
          Do you really want to perform a rollback?

          If desired, give a üëç as a reaction, otherwise give a üëé to cancel this workflow

          |     Current Version      |      New Version       |
          |--------------------------|------------------------|
          |    $currentVersion       |   $rollbackVersion     |
          "

          comment=$(gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$owner/$repository/issues/$issueNumber/comments \
            -f body="$bodyComment")

          commentId=$(echo "$comment" | jq -r '.id')

          check_for_plus_one() {
            comment=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
                /repos/$owner/$repository/issues/comments/$commentId )

            approved=$(echo "$comment" | jq -r '.reactions."+1"')
            disapproved=$(echo "$comment" | jq -r '.reactions."-1"')

            if [ "$approved" != 0 ]; then
              gh issue comment ${{ github.event.issue.number }} -b "‚òëÔ∏è Change approved"
              return 0
            fi

            if [ "$disapproved" != 0 ]; then
              gh issue close ${{ github.event.issue.number }} -c "üö´ Change not approved"
              exit 1
            fi

            echo "Wanting for approve"
          }

          maxWaitTime=120 # 2 Minutes
          startTime=$(date +%s)

          while check_for_plus_one; do
            if [ "$approved" != 0 ]; then
              break
            fi

            current_time=$(date +%s)
            elapsed_time=$((current_time - startTime))

            if [ $elapsed_time -gt $maxWaitTime ]; then
              echo "üïê Maximum waiting time exceeded."
              gh issue close ${{ github.event.issue.number }} -c "üïê Maximum waiting time exceeded"
              exit 1
            fi

            sleep 2

          done

      - name: Parse issue
        uses: stefanbuck/github-issue-parser@v3.1.1

        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/manage_env-vars.yml

      - name : Verify if is a blacklist env
        run: |

          verifyBlackList() {
            if grep -qw "$1" .github/support/env_manager/env-blacklist.txt; then
              gh issue close ${{ github.event.issue.number }} -c "üö´ Branch: $1 cannot be updated because it contains blacklisted secrets!"
              exit 1
            fi
          }

          varValues=${{ steps.issue-parser.outputs.issueparser_var-values }}

          IFS=',' read -ra varValues <<< "$varValues"
          for varValue in "${varValues[@]}"; do
            trimmedVarValue=$(echo "$varValue" | tr -d '[:space:]')
            IFS="=" read -r key _ <<< "$trimmedVarValue"
            verifyBlackList "$key"
          done

          gh issue comment ${{ github.event.issue.number }} -b "‚òëÔ∏è Envs validation success!"

  vault:
    uses: JoaoFerrazfs/Emporium/.github/workflows/vault-manage-secrets.yml@master
