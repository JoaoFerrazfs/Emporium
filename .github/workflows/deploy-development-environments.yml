name: Deploy by issue
on:
  issues:
    types: [opened, edited]

jobs:
  deploy:
    if: contains(github.event.issue.labels.*.name, 'environment-deploy')
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v3

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/deploy-environments.yml

      - name: Verify-issue
        run: |
          echo "${{ steps.issue-parser.outputs.issueparser_branches }}"
          echo "${{ steps.issue-parser.outputs.issueparser_shouldRemove }}" 
          echo "${{ steps.issue-parser.outputs.issueparser_environments }}"
          echo "${{ steps.issue-parser.outputs.jsonString }}"

      - name: Validate branches
        run: |
          branches="${{ steps.issue-parser.outputs.issueparser_branches }}"
          IFS=',' read -ra branch_array <<< "$branches"

          for branch in "${branch_array[@]}"; do
            # Montar a URL da API GitHub para a branch especÃ­fica
            api_url="https://api.github.com/repos/${{ github.repository }}/branches/${branch}"

            # requisicao
            response_code=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $GH_TOKEN" "$api_url")

            if [ "$response_code" -eq 200 ]; then
              echo "Branch '$branch' exists in the remote repository."

            elif [ "$response_code" -eq 404 ]; then
              echo "Branch '$branch' does not exist in the remote repository."
              set -e
              exit 1

            else
              echo "Failed to validate branch '$branch'. HTTP response code: $response_code"

            fi
          done
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close issue with failure
        uses: peter-evans/close-issue@v2
        if: failure() && !cancelled()
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: |
            ## Automation failed :sob:

            Errors ocurred during automation:
            - ${{ steps.issue-parser.outputs.issueparser_branches }}

            You can view all logs acessing the [the action log](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).
